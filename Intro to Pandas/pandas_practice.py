# -*- coding: utf-8 -*-
"""Pandas_Practice.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19pd2CKHvIhfs_60cSPRCj77C1ePfrw0n
"""

import pandas as pd

#load dataset
demo = pd.read_csv("https://raw.githubusercontent.com/AISaturdaysLagos/cohort7_organization/main/Intro%20to%20Pandas/traindemographics.csv")

"""### Data Exploration"""

demo.head(5) #View the first 5 rows of the data

demo.tail(5) #View the last 5 rows of the data

len(demo) #check the length of the dataset

demo.shape #check the shape of the dataset

demo.columns #list of all the columns of the dataset

#let's check for the unique values in a columns
demo['employment_status_clients'].unique()

demo.info() #to get the detail of your data like the counts and dtypes

demo.loc[:, 'bank_name_clients'] #column slicing. To extract column we use loc

demo.iloc[20, :] #To extract only the rows

"""### Working on Missing Data"""

#to view all missing data.
#This comes with boolean output ie False = No missing value, True = Missing Values
demo.isnull()

#To get the sum of missing values by columns
demo.isnull().sum()

"""### Solving missing values for Categorical data
From the output in `demo.isnull().sum()`, we can see that we have lots of missing values espacially in `employment_status_clients` and `level_of_education_clients`. There are two ways to solve this, is either we drop the columns or fill `NAN` values with a name value (i choose to use 'Unknown').
"""

demo['bank_branch_clients'] = demo['bank_branch_clients'].fillna('Unknown') #filled the mssing values with Unknown

demo['employment_status_clients'] = demo['employment_status_clients'].fillna('Unknown') #filled the mssing values with Unknown

demo['level_of_education_clients'] = demo['level_of_education_clients'].fillna('Unknown') #filled the mssing values with Unknown

demo.isnull().sum()

# pd.crosstab(demo["bank_name_clients"], demo["bank_branch_clients"])

"""## Pandas Visualization"""

demo['bank_account_type'].value_counts().plot(kind='bar');

demo['employment_status_clients'].value_counts().plot(kind='bar');

demo['level_of_education_clients'].value_counts().plot(kind='bar');

demo['bank_name_clients'].value_counts().plot(kind='bar');

